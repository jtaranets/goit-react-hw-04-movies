{"version":3,"sources":["components/Card/Card.module.css","components/Gallery/Gallery.module.css","components/Card/Card.jsx","components/Gallery/Gallery.jsx","Pages/Cast/Cast.jsx"],"names":["module","exports","Card","name","character","imgPath","className","styles","title","image","src","alt","defaultProps","Gallery","movies","cast","onClick","list","map","backdrop_path","id","item","key","profile_path","Cast","state","this","props","getMovieCast","then","setState","Component"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,MAAQ,sB,mBCAtDD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,wB,qECGhDC,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,QAApB,OACX,oCACGF,EACC,wBAAIG,UAAWC,IAAOC,OAAQL,GAE9B,wBAAIG,UAAWC,IAAOC,OAAtB,eAEDJ,GAAa,wBAAIE,UAAWC,IAAOC,OAAtB,MAAiCJ,GAC/C,yBACEE,UAAWC,IAAOE,MAClBC,IAAG,yCAAoCL,GACvCM,IAAI,mBAWVT,EAAKU,aAAe,CAClBT,KAAM,GACNC,UAAW,GACXC,QAAS,IAGIH,Q,iBC3BTW,EAAU,SAAC,GAAD,QAAGC,cAAH,MAAY,GAAZ,MAAgBC,YAAhB,MAAuB,GAAvB,MAA2BC,eAA3B,MAAqC,kBAAM,MAA3C,SACd,wBAAIV,UAAWC,IAAOU,MACnBH,GACCA,EAAOI,KAAI,gBAAGV,EAAH,EAAGA,MAAOW,EAAV,EAAUA,cAAeC,EAAzB,EAAyBA,GAAzB,OACT,wBAAId,UAAWC,IAAOc,KAAMC,IAAKF,EAAIJ,QAAS,kBAAMA,EAAQI,KAC1D,kBAAC,EAAD,CAAMjB,KAAMK,EAAOH,QAASc,QAGjCJ,GACCA,EAAKG,KAAI,gBAAGE,EAAH,EAAGA,GAAIjB,EAAP,EAAOA,KAAMoB,EAAb,EAAaA,aAAcnB,EAA3B,EAA2BA,UAA3B,OACP,wBAAIkB,IAAKF,GACP,kBAAC,EAAD,CAAMjB,KAAMA,EAAMC,UAAWA,EAAWC,QAASkB,UAY3DV,EAAQD,aAAe,CACrBE,OAAQ,GACRC,KAAM,GACNC,QAAS,kBAAM,OAGFH,O,mHC7BTW,E,2MACJC,MAAQ,CACNV,KAAM,I,mFAOa,IAAD,OACVK,EAAOM,KAAKC,MAAZP,GACRQ,YAAaR,GAAIS,MAAK,gBAAGd,EAAH,EAAGA,KAAH,OAAc,EAAKe,SAAS,CAAEf,c,+BAG5C,IACAA,EAASW,KAAKD,MAAdV,KAER,OAAO,kBAAC,IAAD,CAASA,KAAMA,Q,GAjBPgB,aAqBJP","file":"static/js/cast-page.5f0ce5df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Card_title__26M01\",\"image\":\"Card_image__2Hq98\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Gallery_list__3ZK2z\",\"item\":\"Gallery_item__2bv7y\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Card.module.css';\n\nconst Card = ({ name, character, imgPath }) => (\n  <>\n    {name ? (\n      <h3 className={styles.title}>{name}</h3>\n    ) : (\n      <h3 className={styles.title}>No name yet</h3>\n    )}\n    {character && <h3 className={styles.title}>as {character}</h3>}\n    <img\n      className={styles.image}\n      src={`https://image.tmdb.org/t/p/w200${imgPath}`}\n      alt=\"movie poster\"\n    />\n  </>\n);\n\nCard.propTypes = {\n  name: PropTypes.string,\n  character: PropTypes.string,\n  imgPath: PropTypes.string,\n};\n\nCard.defaultProps = {\n  name: '',\n  character: '',\n  imgPath: '',\n};\n\nexport default Card;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '../Card/Card';\nimport styles from './Gallery.module.css';\n\nconst Gallery = ({ movies = [], cast = [], onClick = () => null }) => (\n  <ul className={styles.list}>\n    {movies &&\n      movies.map(({ title, backdrop_path, id }) => (\n        <li className={styles.item} key={id} onClick={() => onClick(id)}>\n          <Card name={title} imgPath={backdrop_path} />\n        </li>\n      ))}\n    {cast &&\n      cast.map(({ id, name, profile_path, character }) => (\n        <li key={id}>\n          <Card name={name} character={character} imgPath={profile_path} />\n        </li>\n      ))}\n  </ul>\n);\n\nGallery.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object),\n  cast: PropTypes.arrayOf(PropTypes.object),\n  onClick: PropTypes.func,\n};\n\nGallery.defaultProps = {\n  movies: [],\n  cast: [],\n  onClick: () => null,\n};\n\nexport default Gallery;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Gallery from '../../components/Gallery/Gallery';\nimport { getMovieCast } from '../../services/api';\n\nclass Cast extends Component {\n  state = {\n    cast: [],\n  };\n\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n  };\n\n  componentDidMount() {\n    const { id } = this.props;\n    getMovieCast(id).then(({ cast }) => this.setState({ cast }));\n  }\n\n  render() {\n    const { cast } = this.state;\n\n    return <Gallery cast={cast} />;\n  }\n}\n\nexport default Cast;\n"],"sourceRoot":""}