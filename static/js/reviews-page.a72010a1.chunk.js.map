{"version":3,"sources":["../node_modules/react-truncate/lib/Truncate.js","Pages/Reviews/Reviews.jsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_Component","Truncate","_ref","instance","TypeError","_classCallCheck","this","_len","args","Array","_key","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","concat","state","styles","ellipsis","position","visibility","top","left","elements","onResize","bind","onTruncate","calcTargetWidth","measureWidth","getLines","renderLine","subClass","superClass","create","constructor","value","setPrototypeOf","_inherits","text","canvas","document","createElement","canvasContext","getContext","parentNode","removeChild","window","addEventListener","prevProps","children","forceUpdate","width","timeout","removeEventListener","cancelAnimationFrame","node","div","contentKey","HTMLElement","innerHTML","replace","test","didTruncate","requestAnimationFrame","callback","targetWidth","Math","floor","getBoundingClientRect","style","getComputedStyle","font","join","setState","measureText","offsetWidth","_props","numLines","lines","trimWhitespace","innerText","trimRight","textLines","split","map","line","ellipsisWidth","textWords","resultLine","push","textRest","lower","upper","middle","slice","lastLineText","pop","_lower","_upper","_middle","splice","shift","arr","br","_this2","_props2","spanProps","obj","keys","indexOf","_objectWithoutProperties","ref","targetEl","textEl","ellipsisEl","propTypes","oneOfType","oneOf","number","bool","func","defaultProps","Reviews","reviews","isTruncated","toggleTruncate","truncated","id","getReviews","then","results","className","author","content","Component"],"mappings":"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","file":"static/js/reviews-page.a72010a1.chunk.js","sourcesContent":["var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Truncate = function (_Component) {\n  _inherits(Truncate, _Component);\n\n  function Truncate() {\n    var _ref;\n\n    _classCallCheck(this, Truncate);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = _possibleConstructorReturn(this, (_ref = Truncate.__proto__ || Object.getPrototypeOf(Truncate)).call.apply(_ref, [this].concat(args)));\n\n    _this.state = {};\n    _this.styles = {\n      ellipsis: {\n        position: 'fixed',\n        visibility: 'hidden',\n        top: 0,\n        left: 0\n      }\n    };\n    _this.elements = {};\n    _this.onResize = _this.onResize.bind(_this);\n    _this.onTruncate = _this.onTruncate.bind(_this);\n    _this.calcTargetWidth = _this.calcTargetWidth.bind(_this);\n    _this.measureWidth = _this.measureWidth.bind(_this);\n    _this.getLines = _this.getLines.bind(_this);\n    _this.renderLine = _this.renderLine.bind(_this);\n    return _this;\n  }\n\n  _createClass(Truncate, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var text = this.elements.text,\n          calcTargetWidth = this.calcTargetWidth,\n          onResize = this.onResize;\n      var canvas = document.createElement('canvas');\n      this.canvasContext = canvas.getContext('2d');\n      calcTargetWidth(function () {\n        // Node not needed in document tree to read its content\n        if (text) {\n          text.parentNode.removeChild(text);\n        }\n      });\n      window.addEventListener('resize', onResize);\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      // Render was based on outdated refs and needs to be rerun\n      if (this.props.children !== prevProps.children) {\n        this.forceUpdate();\n      } // If the width prop has changed, recalculate size of contents\n\n\n      if (this.props.width !== prevProps.width) {\n        this.calcTargetWidth();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var ellipsis = this.elements.ellipsis,\n          onResize = this.onResize,\n          timeout = this.timeout;\n      ellipsis.parentNode.removeChild(ellipsis);\n      window.removeEventListener('resize', onResize);\n      window.cancelAnimationFrame(timeout);\n    } // Shim innerText to consistently break lines at <br/> but not at \\n\n\n  }, {\n    key: 'innerText',\n    value: function innerText(node) {\n      var div = document.createElement('div');\n      var contentKey = 'innerText' in window.HTMLElement.prototype ? 'innerText' : 'textContent';\n      div.innerHTML = node.innerHTML.replace(/\\r\\n|\\r|\\n/g, ' ');\n      var text = div[contentKey];\n      var test = document.createElement('div');\n      test.innerHTML = 'foo<br/>bar';\n\n      if (test[contentKey].replace(/\\r\\n|\\r/g, '\\n') !== 'foo\\nbar') {\n        div.innerHTML = div.innerHTML.replace(/<br.*?[\\/]?>/gi, '\\n');\n        text = div[contentKey];\n      }\n\n      return text;\n    }\n  }, {\n    key: 'onResize',\n    value: function onResize() {\n      this.calcTargetWidth();\n    }\n  }, {\n    key: 'onTruncate',\n    value: function onTruncate(didTruncate) {\n      var onTruncate = this.props.onTruncate;\n\n      if (typeof onTruncate === 'function') {\n        this.timeout = window.requestAnimationFrame(function () {\n          onTruncate(didTruncate);\n        });\n      }\n    }\n  }, {\n    key: 'calcTargetWidth',\n    value: function calcTargetWidth(callback) {\n      var target = this.elements.target,\n          calcTargetWidth = this.calcTargetWidth,\n          canvasContext = this.canvasContext,\n          width = this.props.width; // Calculation is no longer relevant, since node has been removed\n\n      if (!target) {\n        return;\n      }\n\n      var targetWidth = width || // Floor the result to deal with browser subpixel precision\n      Math.floor(target.parentNode.getBoundingClientRect().width); // Delay calculation until parent node is inserted to the document\n      // Mounting order in React is ChildComponent, ParentComponent\n\n      if (!targetWidth) {\n        return window.requestAnimationFrame(function () {\n          return calcTargetWidth(callback);\n        });\n      }\n\n      var style = window.getComputedStyle(target);\n      var font = [style['font-weight'], style['font-style'], style['font-size'], style['font-family']].join(' ');\n      canvasContext.font = font;\n      this.setState({\n        targetWidth: targetWidth\n      }, callback);\n    }\n  }, {\n    key: 'measureWidth',\n    value: function measureWidth(text) {\n      return this.canvasContext.measureText(text).width;\n    }\n  }, {\n    key: 'ellipsisWidth',\n    value: function ellipsisWidth(node) {\n      return node.offsetWidth;\n    }\n  }, {\n    key: 'trimRight',\n    value: function trimRight(text) {\n      return text.replace(/\\s+$/, '');\n    }\n  }, {\n    key: 'getLines',\n    value: function getLines() {\n      var elements = this.elements,\n          _props = this.props,\n          numLines = _props.lines,\n          ellipsis = _props.ellipsis,\n          trimWhitespace = _props.trimWhitespace,\n          targetWidth = this.state.targetWidth,\n          innerText = this.innerText,\n          measureWidth = this.measureWidth,\n          onTruncate = this.onTruncate,\n          trimRight = this.trimRight;\n      var lines = [];\n      var text = innerText(elements.text);\n      var textLines = text.split('\\n').map(function (line) {\n        return line.split(' ');\n      });\n      var didTruncate = true;\n      var ellipsisWidth = this.ellipsisWidth(this.elements.ellipsis);\n\n      for (var line = 1; line <= numLines; line++) {\n        var textWords = textLines[0]; // Handle newline\n\n        if (textWords.length === 0) {\n          lines.push();\n          textLines.shift();\n          line--;\n          continue;\n        }\n\n        var resultLine = textWords.join(' ');\n\n        if (measureWidth(resultLine) <= targetWidth) {\n          if (textLines.length === 1) {\n            // Line is end of text and fits without truncating\n            didTruncate = false;\n            lines.push(resultLine);\n            break;\n          }\n        }\n\n        if (line === numLines) {\n          // Binary search determining the longest possible line inluding truncate string\n          var textRest = textWords.join(' ');\n          var lower = 0;\n          var upper = textRest.length - 1;\n\n          while (lower <= upper) {\n            var middle = Math.floor((lower + upper) / 2);\n            var testLine = textRest.slice(0, middle + 1);\n\n            if (measureWidth(testLine) + ellipsisWidth <= targetWidth) {\n              lower = middle + 1;\n            } else {\n              upper = middle - 1;\n            }\n          }\n\n          var lastLineText = textRest.slice(0, lower);\n\n          if (trimWhitespace) {\n            lastLineText = trimRight(lastLineText); // Remove blank lines from the end of text\n\n            while (!lastLineText.length && lines.length) {\n              var prevLine = lines.pop();\n              lastLineText = trimRight(prevLine);\n            }\n          }\n\n          resultLine = React.createElement('span', null, lastLineText, ellipsis);\n        } else {\n          // Binary search determining when the line breaks\n          var _lower = 0;\n\n          var _upper = textWords.length - 1;\n\n          while (_lower <= _upper) {\n            var _middle = Math.floor((_lower + _upper) / 2);\n\n            var _testLine = textWords.slice(0, _middle + 1).join(' ');\n\n            if (measureWidth(_testLine) <= targetWidth) {\n              _lower = _middle + 1;\n            } else {\n              _upper = _middle - 1;\n            }\n          } // The first word of this line is too long to fit it\n\n\n          if (_lower === 0) {\n            // Jump to processing of last line\n            line = numLines - 1;\n            continue;\n          }\n\n          resultLine = textWords.slice(0, _lower).join(' ');\n          textLines[0].splice(0, _lower);\n        }\n\n        lines.push(resultLine);\n      }\n\n      onTruncate(didTruncate);\n      return lines;\n    }\n  }, {\n    key: 'renderLine',\n    value: function renderLine(line, i, arr) {\n      if (i === arr.length - 1) {\n        return React.createElement('span', {\n          key: i\n        }, line);\n      } else {\n        var br = React.createElement('br', {\n          key: i + 'br'\n        });\n\n        if (line) {\n          return [React.createElement('span', {\n            key: i\n          }, line), br];\n        } else {\n          return br;\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var target = this.elements.target,\n          _props2 = this.props,\n          children = _props2.children,\n          ellipsis = _props2.ellipsis,\n          lines = _props2.lines,\n          spanProps = _objectWithoutProperties(_props2, ['children', 'ellipsis', 'lines']),\n          targetWidth = this.state.targetWidth,\n          getLines = this.getLines,\n          renderLine = this.renderLine,\n          onTruncate = this.onTruncate;\n\n      var text = void 0;\n      var mounted = !!(target && targetWidth);\n\n      if (typeof window !== 'undefined' && mounted) {\n        if (lines > 0) {\n          text = getLines().map(renderLine);\n        } else {\n          text = children;\n          onTruncate(false);\n        }\n      }\n\n      delete spanProps.onTruncate;\n      delete spanProps.trimWhitespace;\n      return React.createElement('span', _extends({}, spanProps, {\n        ref: function ref(targetEl) {\n          _this2.elements.target = targetEl;\n        }\n      }), React.createElement('span', null, text), React.createElement('span', {\n        ref: function ref(textEl) {\n          _this2.elements.text = textEl;\n        }\n      }, children), React.createElement('span', {\n        ref: function ref(ellipsisEl) {\n          _this2.elements.ellipsis = ellipsisEl;\n        },\n        style: this.styles.ellipsis\n      }, ellipsis));\n    }\n  }]);\n\n  return Truncate;\n}(Component);\n\nTruncate.propTypes = {\n  children: PropTypes.node,\n  ellipsis: PropTypes.node,\n  lines: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.number]),\n  trimWhitespace: PropTypes.bool,\n  width: PropTypes.number,\n  onTruncate: PropTypes.func\n};\nTruncate.defaultProps = {\n  children: '',\n  ellipsis: '…',\n  lines: 1,\n  trimWhitespace: false,\n  width: 0\n};\nexport default Truncate;\n;","import React, { Component } from 'react';\nimport Truncate from 'react-truncate';\nimport PropTypes from 'prop-types';\nimport { getReviews } from '../../services/api';\n\nclass Reviews extends Component {\n  state = {\n    reviews: [],\n    isTruncated: false,\n  };\n\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n  };\n\n  componentDidMount() {\n    const { id } = this.props;\n    getReviews(id).then(({ results }) => this.setState({ reviews: results }));\n  }\n\n  toggleTruncate = truncated => {\n    this.setState({ isTruncated: !truncated });\n  };\n\n  render() {\n    const { reviews, isTruncated } = this.state;\n    return (\n      <>\n        {reviews.length > 0 ? (\n          <ul className=\"reviews\">\n            {reviews.map(({ author, content, id }) => (\n              <li key={id}>\n                <h3>{author}</h3>\n                <Truncate\n                  lines={isTruncated ? 10 : null}\n                  ellipsis={<span>...</span>}\n                  // onTruncate={this.toggleTruncate}\n                >\n                  {content}\n                </Truncate>\n                {/* <button type=\"button\" onClick={this.toggleTruncate}>\n                  Show {isTruncated ? ' more' : ' less'}\n                </button> */}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>There are no reviews yet</p>\n        )}\n      </>\n    );\n  }\n}\n\nexport default Reviews;\n"],"sourceRoot":""}